"""Device and d_mapping models

Revision ID: 268c76072d93
Revises: f57ae41b3a59
Create Date: 2022-06-29 13:05:02.908855+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '268c76072d93'
down_revision = 'f57ae41b3a59'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('devices',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('color', sa.VARCHAR(length=30), nullable=False),
    sa.Column('icon', sa.VARCHAR(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_devices'))
    )
    op.create_index(op.f('ix_devices_name'), 'devices', ['name'], unique=True)
    op.create_table('device_meters',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('device_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('meter_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('channel', sa.SMALLINT(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], name=op.f('fk_device_meters_device_id_devices'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['meter_id'], ['meters.id'], name=op.f('fk_device_meters_meter_id_meters'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_device_meters')),
    sa.UniqueConstraint('meter_id', 'channel', name=op.f('uq_device_meters_meter_id'))
    )
    op.drop_constraint('fk_cm1_event_id_events', 'cm1', type_='foreignkey')
    op.create_foreign_key(op.f('fk_cm1_event_id_events1'), 'cm1', 'events1', ['event_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_cm1_event_id_events1'), 'cm1', type_='foreignkey')
    op.create_foreign_key('fk_cm1_event_id_events', 'cm1', 'events', ['event_id'], ['id'], ondelete='CASCADE')
    op.drop_table('device_meters')
    op.drop_index(op.f('ix_devices_name'), table_name='devices')
    op.drop_table('devices')
    # ### end Alembic commands ###
